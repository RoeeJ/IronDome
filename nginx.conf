# Run as non-root user
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Additional MIME types for 3D models
    types {
        model/gltf+json gltf;
        model/gltf-binary glb;
        text/plain obj;
        application/octet-stream bin;
    }
    
    # Temp paths for non-root operation
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

    server {
        listen 8080;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # Cache static assets with proper MIME types
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|obj|gltf|glb|bin)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Specific routes for tools
        location = /model-viewer {
            return 301 /model-viewer/;
        }
        
        location /model-viewer/ {
            try_files $uri $uri/index.html /model-viewer/index.html;
        }
        
        location = /tube-editor {
            return 301 /tube-editor/;
        }
        
        location /tube-editor/ {
            try_files $uri $uri/index.html /tube-editor/index.html;
        }

        # Serve static files
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Disable caching for index.html
        location = /index.html {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Only redirect to index.html for non-asset 404s
        location @fallback {
            if ($uri !~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|obj|gltf|glb|bin|json)$) {
                rewrite ^.*$ /index.html last;
            }
        }
        
        error_page 404 @fallback;
    }
}